/**
 * md-crud - Angular material directive to create customizable CRUD forms.
 * @version v0.1.16
 * @link https://github.com/ClassHP/md-crud
 * @license MIT
 */
angular.module("mdCrudTemplates",[]).run(["$templateCache",function(e){e.put("/views/crud.html",'<div layout-margin layout-padding><div><div class="md-default" layout="row" layout-align="start center"><md-button class="md-raised md-primary" ng-click="table.create($event)" ng-if="!options.noCreate" ng-disabled="isLoading">{{translate(text.createOption)}}</md-button><div ng-if="options.templateTools" ng-include="options.templateTools" flex layout="row"></div><div flex></div><div layout="row" ng-if="!options.noSearch" style="margin-bottom:5px"><md-button class="md-icon-button md-primary" ng-disabled="true"><md-icon>&#xE8B6;</md-icon></md-button><md-autocomplete md-search-text="searchText" type="search" placeholder="" md-items="item in []" md-search-text-change="onSearchTextChange(searchText)" md-delay="searchDelay"></md-autocomplete></div></div><div ng-if="formType == \'inline\' && rowCreate"><md-card flex layout-fill style="background-color: white"><md-crud-form options="options" ng-model="rowCreate" on-open="onOpen" on-edit="onEdit" on-cancel="onCancel" on-sussces="onSussces" on-submit="onSubmit" template-url="templateUrl" editable="true"></md-crud-form></md-card><br></div><md-table-container md-whiteframe="1"><table data-md-table md-progress="table.promise"><thead md-head data-md-order="table.order" md-on-reorder="table.refresh" style="background-color: white"><tr md-row><th md-column ng-repeat="field in fields" ng-if="field.columnHiden != true">{{translate(field.label)}}</th><th md-column style="min-width:132px;width:132px" ng-if="!options.noDelete && !options.noEdit"></th><th md-column style="min-width:60px;width:60px" ng-if="(options.noEdit && !options.noDelete) || (!options.noEdit && options.noDelete)"></th></tr></thead><tbody md-body><tr md-row md-select="row" ng-repeat-start="row in (options.serverSide ? table.rows : (table.rows | filter:searchText | limitTo: table.limit: (table.page - 1) * table.limit))" ng-mouseover="row.mouserover=true" ng-mouseleave="row.mouserover=false" ng-class="{ \'md-selected\': row.mouserover || rowSelected == row }" ng-click="table.detail(row, $event)" style="cursor:pointer"><td md-cell ng-repeat="field in fields" ng-if="field.columnHiden != true" md-crud-template="getTemplateColumn(field, row)"></td><td md-cell ng-if="!options.noDelete || !options.noEdit"><md-button class="md-icon-button md-accent" ng-show="row.mouserover || rowSelected == row " ng-click="table.edit(row, $event)" ng-if="!options.noEdit"><md-icon>&#xE3C9;</md-icon></md-button><md-button class="md-icon-button md-accent" ng-show="row.mouserover || rowSelected == row " ng-click="table.delete(row[options.id], $event)" ng-if="!options.noDelete"><md-icon>&#xE92B;</md-icon></md-button></td></tr><tr ng-repeat-end ng-if="rowSelected == row"><td colspan="{{fields.length + 1}}" style="max-width: 0"><md-card layout-fill style="background-color: white"><md-crud-form ng-if="formEditable" options="options" ng-model="row" on-open="onOpen" on-edit="onEdit" on-cancel="onCancel" on-sussces="onSussces" on-submit="onSubmit" template-url="templateUrl" editable="formEditable"></md-crud-form><md-crud-form ng-if="!formEditable" options="options" ng-model="row" on-open="onOpen" on-edit="onEdit" on-cancel="onCancel" on-sussces="onSussces" on-submit="onSubmit" template-url="templateUrl" editable="formEditable"></md-crud-form></md-card></td></tr></tbody></table><md-table-pagination md-limit="table.limit" md-limit-options="table.limitOptions" md-page="table.page" md-total="{{options.serverSide ? table.total : (table.rows | filter:searchText).length}}" md-page-select md-label="{{table.labels()}}" style="background-color: white" md-on-paginate="table.onPaginate"></md-table-pagination></md-table-container></div></div>'),e.put("/views/crudForm.html",'<div layout-padding><form name="formCrud" ng-submit="isFormValid(formCrud) && save()" layout="row" layout-wrap novalidate><div ng-repeat="field in fields" flex="{{field.flex || \'grow\'}}" flex-xs="100" ng-style="field.style" ng-if="(formType==\'create\' && !ef(field.createHiden, item)) || (formType==\'edit\' && !ef(field.editHiden, item)) || (formType==\'detail\' && !ef(field.detailHiden, item))"><div ng-switch="ef(field.type, item)" ng-if="!field.templateUrl"><md-input-container class="md-block" flex ng-switch-default><label>{{translate(field.label)}}</label><input ng-model="item[field.name]" name="{{field.name}}" ng-required="field.required" ng-disabled="ef(field.readonly, item) || ef(options.readonly, item) || readonly || isLoading" ng-minlength="field.minlength" ng-maxlength="field.maxlength" ng-blur="field.onChange && field.onChange(item, formType)" ng-pattern="field.pattern" md-crud-input-validator="field.errorMessage" item="item"><div ng-messages="formCrud[field.name].$error" ng-messages-multiple><div ng-messages-include="/views/crudFormMessages.html"></div></div></md-input-container><md-input-container class="md-block" flex ng-switch-when="textarea"><label>{{translate(field.label)}}</label><textarea ng-model="item[field.name]" name="{{field.name}}" ng-required="field.required" ng-disabled="ef(field.readonly, item) || ef(options.readonly, item) || readonly || isLoading" ng-minlength="field.minlength" ng-maxlength="field.maxlength" rows="{{ field.rows || 3 }}" md-select-on-focus ng-blur="field.onChange && field.onChange(item, formType)" md-crud-input-validator="field.errorMessage" item="item"></textarea><div ng-messages="formCrud[field.name].$error" ng-messages-multiple><div ng-messages-include="/views/crudFormMessages.html"></div></div></md-input-container><md-input-container class="md-block" flex ng-switch-when="email"><label>{{translate(field.label)}}</label><input ng-model="item[field.name]" name="{{field.name}}" ng-required="field.required" type="email" ng-disabled="ef(field.readonly, item) || ef(options.readonly, item) || readonly || isLoading" ng-minlength="field.minlength" ng-maxlength="field.maxlength" ng-pattern="field.pattern" ng-blur="field.onChange && field.onChange(item, formType)" md-crud-input-validator="field.errorMessage" item="item"><div ng-messages="formCrud[field.name].$error" ng-messages-multiple><div ng-messages-include="/views/crudFormMessages.html"></div></div></md-input-container><md-input-container class="md-block" flexemail flex ng-switch-when="integer"><label>{{translate(field.label)}}</label><input type="number" ng-model="item[field.name]" name="{{field.name}}" ng-required="field.required" md-crud-input-number ng-disabled="ef(field.readonly, item) || ef(options.readonly, item) || readonly || isLoading" ng-min="field.min" ng-max="field.max" step="{{field.step || 1}}" ng-blur="field.onChange && field.onChange(item, formType)" md-crud-input-validator="field.errorMessage" item="item"><div ng-messages="formCrud[field.name].$error" ng-messages-multiple><div ng-messages-include="/views/crudFormMessages.html"></div></div></md-input-container><md-input-container class="md-block" flex ng-switch-when="decimal"><label>{{translate(field.label)}}</label><input type="number" ng-model="item[field.name]" name="{{field.name}}" ng-required="field.required" md-crud-input-number ng-disabled="ef(field.readonly, item) || ef(options.readonly, item) || readonly || isLoading" ng-min="field.min" ng-max="field.max" step="{{field.step || \'any\'}}" ng-blur="field.onChange && field.onChange(item, formType)" md-crud-input-validator="field.errorMessage" item="item"><div ng-messages="formCrud[field.name].$error" ng-messages-multiple><div ng-messages-include="/views/crudFormMessages.html"></div></div></md-input-container><div class="md-block" flex ng-switch-when="image"><lf-ng-md-file-input name="{{field.name}}" lf-files="files[field.name]" lf-mimetype="image/*" lf-placeholder="{{field.label}}" lf-browse-label="Abrir" lf-remove-label="Eliminar"></lf-ng-md-file-input><div ng-messages="formCrud[field.name].$error" ng-messages-multiple><div ng-messages-include="/views/crudFormMessages.html"></div></div><br></div><div class="md-block" flex ng-switch-when="map"><ng-map zoom="{{field.zoom || 11}}" center="{{item[field.lat]}},{{item[field.lng]}}"><marker position="{{item[field.lat]}},{{item[field.lng]}}" title="drag me" draggable="true" on-dragend="onMarkerDrag()" data="{{field}}"></marker></ng-map></div><md-input-container class="md-block" flex ng-switch-when="boolean"><md-switch ng-model="item[field.name]" ng-disabled="ef(field.readonly, item) || ef(options.readonly, item) || readonly || isLoading" aria-label="field.label" ng-true-value="{{\'\\\'\'+ field.trueValue + \'\\\'\'}}" ng-if="field.trueValue" ng-change="field.onChange && field.onChange(item, formType)">{{translate(((item[field.name] == field.trueValue) ? field.trueLabel : field.falseLabel) || field.label)}}</md-switch><md-switch ng-model="item[field.name]" ng-disabled="ef(field.readonly, item) || ef(options.readonly, item) || readonly || isLoading" aria-label="field.label" ng-if="!field.trueValue" ng-change="field.onChange && field.onChange(item, formType)">{{translate((item[field.name] ? field.trueLabel : field.falseLabel) || field.label)}}</md-switch></md-input-container><md-input-container class="md-block" flex ng-switch-when="select"><label>{{translate(field.label)}}</label><md-select ng-model="item[field.name]" ng-if="field.multiple" name="{{field.name}}" multiple="multiple" ng-disabled="ef(field.readonly, item) || ef(options.readonly, item) || readonly || isLoading" ng-required="field.required" ng-change="field.onChange && field.onChange(item, formType)" md-crud-input-validator="field.errorMessage" item="item" md-on-open="field.onOpen(item)"><md-option ng-value="option[field.value || \'value\']" ng-repeat="option in ef(field.data, item)" md-crud-template="templateSelect(field)"></md-option></md-select><md-select ng-model="item[field.name]" ng-if="!field.multiple" name="{{field.name}}" ng-disabled="ef(field.readonly, item) || ef(options.readonly, item) || readonly || isLoading" ng-required="field.required" ng-change="field.onChange && field.onChange(item, formType)" md-crud-input-validator="field.errorMessage" item="item" md-on-open="field.onOpen(item)"><md-option ng-if="!field.required"></md-option><md-option ng-value="option[field.value || \'value\']" ng-repeat="option in ef(field.data, item)" md-crud-template="templateSelect(field)"></md-option></md-select><div ng-messages="formCrud[field.name].$error" ng-messages-multiple><div ng-messages-include="/views/crudFormMessages.html"></div></div></md-input-container><md-input-container class="md-block" flex ng-switch-when="date"><label>{{translate(field.label)}}</label><md-datepicker ng-model="item[field.name]" name="{{field.name}}" md-min-date="ef(field.minDate, item)" md-max-date="ef(field.maxDate, item)" ng-disabled="ef(field.readonly, item) || ef(options.readonly, item) || readonly || isLoading" ng-required="field.required" ng-change="field.onChange && field.onChange(item, formType)"></md-datepicker><div ng-messages="formCrud[field.name].$error" ng-messages-multiple><div ng-messages-include="/views/crudFormMessages.html"></div></div></md-input-container><md-input-container class="md-block" ng-switch-when="time" flex><label style="margin-left: 50px">{{translate(field.label)}}</label><div class="" layout="row" layout-align="start start"><md-button layout-nowrap ng-click="showTimePicker($event, item, field.name)" class="md-datepicker-button md-icon-button md-button md-ink-ripple" ng-disabled="ef(field.readonly, item) || ef(options.readonly, item) || readonly || isLoading"><md-icon>access_time</md-icon></md-button><div flex><input class="md-datepicker-input md-input" type="time" name="{{field.name}}" ng-model="item[field.name]" md-crud-input-date ng-required="field.required" flex ng-min="ef(field.min, item)" ng-max="ef(field.max, item)" ng-disabled="ef(field.readonly, item) || ef(options.readonly, item) || readonly || isLoading" ng-blur="field.onChange && field.onChange(item, formType)" md-crud-input-validator="field.errorMessage" item="item"><div ng-messages="formCrud[field.name].$error" ng-messages-multiple><div ng-messages-include="/views/crudFormMessages.html"></div></div></div></div></md-input-container><div class="md-block" ng-switch-when="datetime" flex layout="row" layout-align="start start"><md-input-container flex="none"><label>{{translate(field.label)}}</label><md-datepicker layout-nowrap ng-model="item[field.name]" name="{{field.name}}" md-min-date="ef(field.minDate, item)" md-max-date="ef(field.maxDate, item)" ng-disabled="ef(field.readonly, item) || ef(options.readonly, item) || readonly || isLoading" ng-required="field.required" ng-change="field.onChange && field.onChange(item, formType)"></md-datepicker><div ng-messages="formCrud[field.name].$error" ng-messages-multiple><div ng-messages-include="/views/crudFormMessages.html"></div></div></md-input-container><md-input-container><div class="" layout="row" layout-align="start start"><md-button layout-nowrap ng-click="showTimePicker($event, item, field.name)" class="md-datepicker-button md-icon-button md-button md-ink-ripple" ng-disabled="ef(field.readonly, item) || ef(options.readonly, item) || readonly || isLoading"><md-icon>access_time</md-icon></md-button><div flex><input class="md-datepicker-input md-input" type="time" name="{{field.name}}" ng-model="item[field.name]" md-crud-input-date ng-required="field.required" flex ng-min="field.min" ng-max="field.max" ng-disabled="ef(field.readonly, item) || ef(options.readonly, item) || readonly || isLoading" ng-blur="field.onChange && field.onChange(item, formType)" md-crud-input-validator="field.errorMessage" item="item"><div ng-messages="formCrud[field.name].$error" ng-messages-multiple><div ng-messages-include="/views/crudFormMessages.html"></div></div></div></div></md-input-container></div><div class="md-block" ng-switch-when="button" flex layout="row" layout-align="center center"><md-button ng-class="field.class" ng-click="field.onClick(item)">{{translate(field.label)}}</md-button></div><div class="md-block" flex ng-switch-when="label"><span>{{translate(field.label)}}</span></div></div><div ng-if="field.templateUrl" ng-include="field.templateUrl"></div></div><div ng-repeat="message in errors" md-colors="{color:\'warn\'}" flex="grow">{{translate(message)}}</div><div layout="row" layout-align="center center" flex="grow" ng-if="!(formType==\'detail\' && options.noDetailButtons)"><md-button class="md-raised" ng-click="cancel()" ng-disabled="isLoading">{{translate(options.formCancelText || text.formCancel)}}</md-button><div flex="5"></div><md-button class="md-raised md-primary" type="submit" ng-disabled="ef(options.readonly, item) || readonly || isLoading">{{translate(options.formSubmitText || text.formSubmit)}}</md-button></div></form></div>'),e.put("/views/crudFormDialog.html",'<md-dialog aria-label="Editar" flex="50"><md-toolbar><div class="md-toolbar-tools"><h2>{{ formTitle }}</h2><span flex></span><md-button class="md-icon-button" ng-click="cancelDialog()"><md-icon aria-label="Cerrar">close</md-icon></md-button></div></md-toolbar><md-dialog-content><md-crud-form options="options" ng-model="item" on-open="onOpen" on-edit="onEdit" on-cancel="onCancelDialog" on-sussces="onSusscesDialog" template-url="templateUrl" editable="formEditable"></md-crud-form></md-dialog-content></md-dialog>'),e.put("/views/crudFormMessages.html",'<div ng-message="required">{{translate(field.messageRequired || text.messageRequired)}}</div><div ng-message="minlength">{{translate(field.messageMinlength || text.messageMinlength)}} ({{field.minlength}}).</div><div ng-message="maxlength">{{translate(field.messageMaxlength || text.messageMaxlength)}} ({{field.maxlength}}).</div><div ng-message="pattern">{{translate(field.messagePattern || text.messagePattern)}}</div><div ng-message="min">{{translate(field.messageMin || text.messageMin)}} ({{field.min}}).</div><div ng-message="max">{{translate(field.messageMax || text.messageMax)}} ({{field.max}}).</div><div ng-message="mimetype">{{translate(field.messageMimetype || text.messageMimetype)}}</div><div ng-message="valid">{{translate(field.messageValid || text.messageValid)}}</div><div ng-message="mindate">{{translate(field.messageMindate || text.messageMindate)}} {{field.minDate | date:\'shortDate\'}}.</div><div ng-message="maxdate">{{translate(field.messageMaxdate || text.messageMaxdate)}} {{field.maxDate | date:\'shortDate\'}}.</div><div ng-message="mdCrudInputValidator">{{translate(ef(field.errorMessage, item[field.name], item))}}</div>')}]),function(){"use strict";angular.module("mdCrudModule",["mdCrudTemplates"])}(),function(){"use strict";function e(e,t,n,i,a){function l(l,o,r){var d=e.text;l.text=d;var m=e.options.translate;l.translate=m;var s=l.options;s.id=s.id||"id",l.formType=t.evalDefined([r.formType,s.formType,e.options.formType]);var u=t.evalDefined([r.deleteConfirm,s.deleteConfirm,e.options.deleteConfirm]),f=t.evalDefined([r.autoRefresh,s.autoRefresh,e.options.autoRefresh]),c=t.evalDefined([r.getParams,s.getParams,{}]);l.searchText=r.searchText||s.searchText||"",l.searchDelay=r.searchDelay||s.searchDelay||(s.serverSide?500:0),l.fields=s.fields,l.rowSelected=null,l.rowCreate=null;var g=l.ef=t.evalFunction;l.stringToHtml=function(e,t){return a.trustAsHtml(i(e)(t))},l.isLoading=!0,l.getTemplateColumn=function(t,n){var i=t.templateColumn||t.columnTemplate||e.templateColumns[g(t.type,n)||"default"]||e.templateColumns.default;return i.replace("row[field.name]","row."+t.name)},l.getTemplateSelect=function(e){var t=e.templateSelect||"{{translate(getOptionSelect(field, row)."+(e.text||"text")+")}}";return t},l.getOptionSelect=function(e,n){var i=t.evalFunction(e.data,n);for(var a in i)if(i[a][e.value]==n[e.name])return i[a];return n},l.onSearchTextChange=function(e){l.searchText=e,s.serverSide&&p.searchParam&&(l.table.page=1,s.refresh())};var p=angular.copy(e.options.serverSide||{});s.serverSide&&"boolean"!=typeof s.serverSide&&angular.extend(p,s.serverSide),l.table={rows:[],refresh:function(t){l.isLoading=!0,angular.extend(c,t);var n=angular.copy(s.http||{});n.entity=s.entity,n.params=angular.copy(n.params||{}),angular.extend(n.params,c),s.serverSide&&(n.params[p.pageParam]=l.table.page,n.params[p.offsetParam]=(l.table.page-1)*l.table.limit,n.params[p.limitParam]=l.table.limit,n.params[p.searchParam]=""!=l.searchText?l.searchText:void 0),l.table.promise=e.get(n).then(function(e){l.isLoading=!1,s.serverSide?(l.table.rows=e.data[p.dataResponse],l.table.total=e.data[p.totalResponse]):l.table.rows=e.data})},create:function(e){e&&e.stopPropagation(),l.rowSelected=null,l.rowCreate={},"window"==l.formType&&v({},!0,e).then(function(e){})},edit:function(e,t){t.stopPropagation(),e[s.id]&&("inline"==l.formType&&(l.rowCreate=null,l.selectRow(e,!0)),"window"==l.formType&&v(e,!0,t).then(function(e){}))},detail:function(e,t){return s.editOnSelect?void l.table.edit(e,t):(t.stopPropagation(),"inline"==l.formType&&(l.rowCreate=null,l.rowSelected==e?l.rowSelected=null:s.noDetail||l.selectRow(e,!1)),void("window"==l.formType&&v(e,!1,t).then(function(e){})))},delete:function(n,i){l.rowSelected=null,i.stopPropagation();var a=this,o=this.rows.findIndex(function(e){return e[s.id]==n}),r=angular.copy(s.http||{});r.entity=s.entity,r.id=n;var f=function(){e.delete(r).then(function(e){a.rows.splice(o,1)},function(e){e||(e=d.deleteError),t.showAlert(m(d.deleteErrorTitle),m(e),m(d.btnAlertOk))})};u?t.showConfirm(m(d.deleteConfirmTitle),m(d.deleteConfirmMessage),m(d.deleteConfirmOk),m(d.btnConfirmCancel),m(d.btnConfirmCancel)).then(function(){f()}):f()},promise:null,order:"",limit:t.evalDefined([r.tableLimit,s.tableLimit,e.options.tableLimit]),limitOptions:t.evalDefined([r.limitOptions,s.limitOptions,e.options.limitOptions]),page:1,rowSelection:!1,selected:[],labels:function(){return{page:m(d.tablePaginationPage),rowsPerPage:m(d.tablePaginationRowsPerPage),of:m(d.tablePaginationOf)}},onPaginate:function(){s.serverSide&&l.table.refresh()}},s.refresh=function(e){l.table.refresh(e)},s.create=function(){l.table.create()},s.cancel=function(){l.rowSelected=null,l.rowCreate=null,n.cancel()},f&&s.refresh();var v=function(e,t,i){return l.formEditable=t,n.show({controller:["$scope","$mdDialog","mdCrudService","item","options",b],templateUrl:"/views/crudFormDialog.html",clickOutsideToClose:!0,fullscreen:!0,scope:l,preserveScope:!0,controllerAs:"vm",locals:{item:e,options:s},targetEvent:i,parent:o})};l.templateUrl=(s.form||{}).templateUrl,l.onOpen=function(e,t){(s.form||{}).onOpen&&s.form.onOpen(e,t)},l.onEdit=function(e){(s.form||{}).onEdit&&s.form.onEdit(e)},l.onCancel=function(e){(s.form||{}).onCancel&&s.form.onCancel(e),l.rowSelected=null,l.rowCreate=null,e&&t.showAlert(m(d.generalErrorTitle),m(e),m(d.btnAlertOk))},l.onSussces=function(e,t){(s.form||{}).onSussces&&s.form.onSussces(e,t),"create"!=t||s.noCreateAdd||l.table.rows.unshift(e),l.rowSelected=null,l.rowCreate=null},l.onSubmit=function(e,t){(s.form||{}).onSubmit&&s.form.onSubmit(e,t)},l.selectRow=function(e,t){l.rowSelected=e,l.formEditable=t};var b=function(e,t,n,i,a){e.formTitle=m(i[a.id]?e.formEditable?d.editTitle:d.detailTitle:d.createTitle),e.item=i,e.onCancelDialog=function(e){(a.form||{}).onCancel&&a.form.onCancel(e),t.cancel()},e.onSusscesDialog=function(e,n){(a.form||{}).onSussces&&a.form.onSussces(e,n),t.hide(e)},e.cancelDialog=function(){e.onCancelDialog(i)}};l.onLoad&&l.onLoad()}var o={link:l,restrict:"EA",scope:{options:"=",onLoad:"="},templateUrl:"/views/crud.html"};return o}angular.module("mdCrudModule").directive("mdCrud",e),e.$inject=["mdCrudService","mdCrudToolsService","$mdDialog","$interpolate","$sce"]}(),function(){"use strict";function e(e,t,n,i,a,l,o){function r(n,l,r){var m=e.text;n.text=m;var s=e.options.translate;n.translate=s,n.stringToHtml=function(e,t){return a.trustAsHtml(i(e)(t))},n.templateSelect=function(e){var t=e.templateSelect||"<translate>{{option."+(e.text||"text")+"}}</translate>";return t};var u=n.options;n.fields=u.fields,n.readonly=0==n.editable,n.ef=t.evalFunction,n.isLoading=!1;var f=n.ngModel[u.id];if(n.formTitle=f?n.editable?m.editTitle:m.detailTitle:m.createTitle,n.formType=f?n.editable?"edit":"detail":"create",n.fields=u.fields,n.item=angular.copy(n.ngModel||{}),n.getContentUrl=function(e,t){return n.templateUrl||"/views/crudForm.html"},n.showTimePicker=function(e,t,n){d&&d(t[n],{targetEvent:e}).then(function(e){t[n]=e})},n.onOpen&&n.onOpen(n.item,n.formType),f){n.isLoading=!0;var c=angular.copy(u.http||{});c.entity=u.entity,c.id=f,e.getById(c).then(function(e){n.item=e.data,n.onEdit&&n.onEdit(n.item),n.isLoading=!1},function(e){n.onError&&n.onError(e),n.cancel(e)})}n.save=function(){n.onSubmit&&n.onSubmit(n.item,n.formType);var t,i=angular.copy(u.http||{});i.entity=u.entity,i.data=n.item,f?(i.id=n.item[u.id],t=e.patch(i)):t=e.post(i),n.isLoading=!0,t.then(function(e){angular.copy(e.data,n.ngModel),n.onSussces&&n.onSussces(e.data,n.formType),n.isLoading=!1},function(e){e.details?n.errors=e.details:n.errors=[e.error],n.onError&&n.onError(e),n.isLoading=!1})},n.cancel=function(e){n.onCancel&&n.onCancel(e)},n.onMarkerDrag=function(e){n.item[this.data.lat]=e.latLng.lat(),n.item[this.data.lng]=e.latLng.lng()},n.isFormValid=function(e){return!!e.$valid||(o[0].querySelector("form .ng-invalid").focus(),!1)}}var d;try{d=n.get("$mdpTimePicker")}catch(e){}var m={link:r,restrict:"EA",scope:{options:"=",ngModel:"=",onOpen:"=",onEdit:"=",onCancel:"=",onSussces:"=",onSubmit:"=",templateUrl:"<?",editable:"<?"},template:'<div ng-include="getContentUrl()"></div>'};return m}angular.module("mdCrudModule").directive("mdCrudForm",e),e.$inject=["mdCrudService","mdCrudToolsService","$injector","$interpolate","$sce","$compile","$document"]}(),function(){"use strict";angular.module("mdCrudModule").directive("mdCrudInputNumber",function(){return{require:"ngModel",link:function(e,t,n,i){i.$parsers.push(function(e){return"number"!=typeof e?parseFloat(e):e}),i.$formatters.push(function(e){return"number"!=typeof e?parseFloat(e):e})}}}).directive("mdCrudInputBoolean",function(){return{require:"ngModel",link:function(e,t,n,i){i.$parsers.push(function(e){return"boolean"!=typeof e?"true"==e:e}),i.$formatters.push(function(e){return"boolean"!=typeof e?"true"==e:e})}}}).directive("mdCrudInputDate",function(){return{require:"ngModel",link:function(e,t,n,i){i.$parsers.push(function(e){return e instanceof Date?e:new Date(e)}),i.$formatters.push(function(e){return e instanceof Date?e:new Date(e)})}}}).directive("mdCrudInputValidator",function(){return{require:"ngModel",scope:{validator:"=mdCrudInputValidator",item:"=item"},link:function(e,t,n,i){i.$validators.mdCrudInputValidator=function(t){return angular.isFunction(e.validator)?!angular.isDefined(e.validator(t,e.item)):!angular.isDefined(e.validator)}}}})}(),function(){"use strict";function e(e){return function(t,n,i){t.$watch(function(e){return e.$eval(i.mdCrudTemplate)},function(i){n.html(i),e(n.contents())(t)})}}angular.module("mdCrudModule").directive("mdCrudTemplate",e),e.$inject=["$compile"]}(),function(){"use strict";function e(e,t,n,i){var a={rootApi:"/api",methodGet:"GET",methodPost:"POST",methodPatch:"PATCH",methodDelete:"DELETE",urlGet:"{{rootApi}}/{{entity}}",urlGetById:"{{rootApi}}/{{entity}}/{{id}}",urlPost:"{{rootApi}}/{{entity}}",urlPatch:"{{rootApi}}/{{entity}}/{{id}}",urlDelete:"{{rootApi}}/{{entity}}/{{id}}",functionHttp:function(i,l){return i.functionHttp?i.functionHttp(i):e(function(e,o){n({url:t(i.url)(i),method:i.method,params:i.params,data:i.data}).then(function(t){(i.functionData||a.functionData)(t,e,o,l)},function(e){o(e.data)})})},functionData:function(e,t,n,i){t(e)},formType:"inline",deleteConfirm:!0,tableLimit:10,limitOptions:[10,20,30],translate:function(e){return e},autoRefresh:!0,serverSide:{pageParam:"page",offsetParam:"offset",limitParam:"limit",searchParam:"search",dataResponse:"data",totalResponse:"total"}},l={editTitle:"Edit",detailTitle:"Detail",createTitle:"Create",deleteError:"Error while trying to delete row",deleteErrorTitle:"Error deleting",deleteConfirmTitle:"Delete",deleteConfirmMessage:"Are you sure you want to delete the row?",tablePaginationPage:"Page",tablePaginationRowsPerPage:"Rows per page:",tablePaginationOf:"of",createOption:"Create",btnConfirmOk:"Yes",btnConfirmCancel:"No",btnAlertOk:"Ok",generalErrorTitle:"Error",messageRequired:"Required",messageMinlength:"Min length",messageMaxlength:"Max length",messagePattern:"Invalid input format.",messageMin:"Min value",messageMax:"Max value",messageMimetype:"Invalid file type.",messageValid:"Invalid input format.",messageMindate:"Min date",messageMaxdate:"Max date",formCancel:"Cancel",formSubmit:"Save"},o={boolean:'<span><md-switch ng-model="row[field.name]" ng-disabled="true" aria-label="{{translate(field.label)}}" ng-true-value="{{\'\\\'\'+ field.trueValue + \'\\\'\'}}" ng-if="field.trueValue">{{translate(((row[field.name] == field.trueValue)? field.trueLabel : field.falseLabel) || "")}}</md-switch></span><span><md-switch ng-model="row[field.name]" ng-disabled="true" aria-label="{{translate(field.label)}}" ng-if="!field.trueValue">{{translate((row[field.name] ? field.trueLabel : field.falseLabel) || "")}}</md-switch></span>',image:'<image ng-src="{{row[field.name]}}" style="max-height:90px"></image>',date:'<span>{{ row[field.name] | date:"shortDate" }}</span>',time:'<span>{{ row[field.name] | date:"shortTime" }}</span>',datetime:'<span>{{ row[field.name] | date:"short" }}</span>',select:'<span md-crud-template="getTemplateSelect(field, row)"></span>',text:"<span>{{translate(row[field.name])}}</span>",button:'<md-button ng-class="field.class" ng-click="field.onClick(row, $event) || $event.stopPropagation()">{{translate(field.label)}}</md-button>',default:"<span>{{translate(row[field.name])}}</span>"};return{templateColumns:o,options:a,setDefaultTemplateColumns:function(e){angular.extend(o,i.removeNull(e))},setDefaultOptions:function(e){angular.extend(a,i.removeNull(e))},text:l,setDefaultText:function(e){angular.extend(l,i.removeNull(e))},get:function(e){var t={url:e.urlGet||a.urlGet,method:e.methodGet||a.methodGet,rootApi:a.rootApi};return angular.extend(t,i.removeNull(e)),a.functionHttp(t,"get")},getById:function(e){var t={url:e.urlGetById||a.urlGetById,method:e.methodGet||a.methodGet,rootApi:a.rootApi};return angular.extend(t,i.removeNull(e)),a.functionHttp(t,"getById")},post:function(e){var t={url:e.urlPost||a.urlPost,method:e.methodPost||a.methodPost,rootApi:a.rootApi};return angular.extend(t,i.removeNull(e)),a.functionHttp(t,"post")},patch:function(e){var t={url:e.urlPatch||a.urlPatch,method:e.methodPatch||a.methodPatch,rootApi:a.rootApi};return angular.extend(t,i.removeNull(e)),a.functionHttp(t,"patch")},delete:function(e){var t={url:e.urlDelete||a.urlDelete,method:e.methodDelete||a.methodDelete,rootApi:a.rootApi};return angular.extend(t,i.removeNull(e)),a.functionHttp(t,"delete")}}}angular.module("mdCrudModule").service("mdCrudService",["$q","$interpolate","$http","mdCrudToolsService",e])}(),function(){"use strict";function e(e){return{showConfirm:function(t,n,i,a){i=i||"Yes",a=a||"No";var l=e.confirm().title(t).ariaLabel(t).textContent(n).ok(i).cancel(a);return e.show(l)},showAlert:function(t,n,i){i=i||"Ok",e.show(e.alert().clickOutsideToClose(!0).title(t).ariaLabel(t).textContent(n).ok(i))},getBase64:function(e){return $q(function(t,n){var i=new FileReader;i.readAsDataURL(e),i.onload=function(){t(i.result)},i.onerror=function(e){n(e)}})},removeNullRecursive:function(e){var t=function(e,n){var i=n[e];if(null===i||void 0===i)delete n[e];else if("object"==typeof i)for(var a in i)t(a,i)};for(var n in e)t(n,e);return e},removeNull:function(e){for(var t in e){var n=e[t];null!==n&&void 0!==n||delete e[t]}return e},evalFunction:function(e,t,n,i,a,l){return angular.isFunction(e)?e(t,n,i,a,l):e},evalDefined:function(e){for(var t in e)if(angular.isDefined(e[t]))return e[t]}}}angular.module("mdCrudModule").service("mdCrudToolsService",["$mdDialog",e])}();